{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "감기진료건수",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyNcmmwgZCX+r8pr5Du+thVF",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sejeong-park/2020-AI/blob/master/%EA%B0%90%EA%B8%B0%EC%A7%84%EB%A3%8C%EA%B1%B4%EC%88%98%20%EC%98%88%EC%B8%A1.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_34TirfKU-OB",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 682
        },
        "outputId": "09ef727a-a7e5-4f03-b20e-9044ef28b0ef"
      },
      "source": [
        "!pip uninstall kaggle\n",
        "!pip install --upgrade pip\n",
        "!pip install kaggle==1.5.6"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Uninstalling kaggle-1.5.6:\n",
            "  Would remove:\n",
            "    /usr/local/bin/kaggle\n",
            "    /usr/local/lib/python3.6/dist-packages/kaggle-1.5.6.dist-info/*\n",
            "    /usr/local/lib/python3.6/dist-packages/kaggle/*\n",
            "Proceed (y/n)? ㅛ\n",
            "Your response ('ㅛ') was not one of the expected responses: y, n\n",
            "Proceed (y/n)? y\n",
            "  Successfully uninstalled kaggle-1.5.6\n",
            "Collecting pip\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/43/84/23ed6a1796480a6f1a2d38f2802901d078266bda38388954d01d3f2e821d/pip-20.1.1-py2.py3-none-any.whl (1.5MB)\n",
            "\u001b[K     |████████████████████████████████| 1.5MB 4.5MB/s \n",
            "\u001b[?25hInstalling collected packages: pip\n",
            "  Found existing installation: pip 19.3.1\n",
            "    Uninstalling pip-19.3.1:\n",
            "      Successfully uninstalled pip-19.3.1\n",
            "Successfully installed pip-20.1.1\n",
            "Collecting kaggle==1.5.6\n",
            "  Downloading kaggle-1.5.6.tar.gz (58 kB)\n",
            "\u001b[K     |████████████████████████████████| 58 kB 3.4 MB/s \n",
            "\u001b[?25hRequirement already satisfied: urllib3<1.25,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (1.24.3)\n",
            "Requirement already satisfied: six>=1.10 in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (1.12.0)\n",
            "Requirement already satisfied: certifi in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (2020.4.5.1)\n",
            "Requirement already satisfied: python-dateutil in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (2.8.1)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (2.23.0)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (4.41.1)\n",
            "Requirement already satisfied: python-slugify in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (4.0.0)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests->kaggle==1.5.6) (2.9)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests->kaggle==1.5.6) (3.0.4)\n",
            "Requirement already satisfied: text-unidecode>=1.3 in /usr/local/lib/python3.6/dist-packages (from python-slugify->kaggle==1.5.6) (1.3)\n",
            "Building wheels for collected packages: kaggle\n",
            "  Building wheel for kaggle (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for kaggle: filename=kaggle-1.5.6-py3-none-any.whl size=72859 sha256=f9f8480a3f6bdb65fb34b13fdd6130875345970716e024b95ffd92ada5f90e20\n",
            "  Stored in directory: /root/.cache/pip/wheels/01/3e/ff/77407ebac3ef71a79b9166a8382aecf88415a0bcbe3c095a01\n",
            "Successfully built kaggle\n",
            "Installing collected packages: kaggle\n",
            "Successfully installed kaggle-1.5.6\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "u7-Lnu3kde7H",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "2ed23140-192c-4060-ce78-6c9cc4771bda"
      },
      "source": [
        "!mkdir -p ~/.kaggle\n",
        "!cp kaggle.json ~/.kaggle\n",
        "!ls -lha kaggle.json\n",
        "!chmod 600 ~/.kaggle/kaggle.json"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "-rw-r--r-- 1 root root 67 Jun 15 05:30 kaggle.json\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sFGeTKWpde1e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 69
        },
        "outputId": "c2d40dce-dfd7-4f01-e66c-ade3adeba59b"
      },
      "source": [
        "!kaggle competitions download -c cold"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Downloading cold.zip to /content\n",
            "\r  0% 0.00/9.06k [00:00<?, ?B/s]\n",
            "\r100% 9.06k/9.06k [00:00<00:00, 8.01MB/s]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Anon1_K7dfK8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 86
        },
        "outputId": "91a18d28-a1c7-4aa1-bf09-43890c2b36f6"
      },
      "source": [
        "!unzip cold.zip"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Archive:  cold.zip\n",
            "  inflating: sample.csv              \n",
            "  inflating: test.csv                \n",
            "  inflating: train.csv               \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ALpqtNvLdfIf"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import torch\n",
        "import torchvision.datasets as data\n",
        "import torchvision.transforms as transforms\n",
        "import random\n",
        "from sklearn import preprocessing\n",
        "\n",
        "device = 'cuda' if torch.cuda.is_available() else 'cpu'\n",
        "\n",
        "random.seed(777)\n",
        "torch.manual_seed(777)\n",
        "if device == 'cuda':\n",
        "  torch.cuda.manual_seed_all(777)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MYiHLSJedfFp"
      },
      "source": [
        "learning_rate = 1e-1\n",
        "training_epochs = 200\n",
        "batch_size = 100\n",
        "Scaler = preprocessing.StandardScaler()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UFtjckUvezka"
      },
      "source": [
        "train = pd.read_csv(\"train.csv\", header = None, skiprows=1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kgi8ccntezgB",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 404
        },
        "outputId": "736ad2d1-fb89-41f1-edf5-987aef866b80"
      },
      "source": [
        "train"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>20140101</td>\n",
              "      <td>0.3</td>\n",
              "      <td>51.3</td>\n",
              "      <td>1003.6</td>\n",
              "      <td>7.6</td>\n",
              "      <td>5992</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>20140102</td>\n",
              "      <td>-1.3</td>\n",
              "      <td>35.4</td>\n",
              "      <td>1010.4</td>\n",
              "      <td>7.5</td>\n",
              "      <td>101309</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>20140103</td>\n",
              "      <td>-1.1</td>\n",
              "      <td>54.4</td>\n",
              "      <td>1006.9</td>\n",
              "      <td>8.4</td>\n",
              "      <td>84210</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>20140104</td>\n",
              "      <td>-3.7</td>\n",
              "      <td>47.1</td>\n",
              "      <td>1008.8</td>\n",
              "      <td>9.3</td>\n",
              "      <td>74899</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20140105</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>48.4</td>\n",
              "      <td>1013.1</td>\n",
              "      <td>8.1</td>\n",
              "      <td>7695</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>632</th>\n",
              "      <td>20161227</td>\n",
              "      <td>-6.3</td>\n",
              "      <td>54.6</td>\n",
              "      <td>1012.5</td>\n",
              "      <td>7.6</td>\n",
              "      <td>114596</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>633</th>\n",
              "      <td>20161228</td>\n",
              "      <td>-8.4</td>\n",
              "      <td>49.0</td>\n",
              "      <td>1019.1</td>\n",
              "      <td>11.0</td>\n",
              "      <td>106959</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>634</th>\n",
              "      <td>20161229</td>\n",
              "      <td>-7.2</td>\n",
              "      <td>53.1</td>\n",
              "      <td>1019.8</td>\n",
              "      <td>6.1</td>\n",
              "      <td>108302</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>635</th>\n",
              "      <td>20161230</td>\n",
              "      <td>-9.1</td>\n",
              "      <td>50.9</td>\n",
              "      <td>1021.9</td>\n",
              "      <td>10.1</td>\n",
              "      <td>121339</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>636</th>\n",
              "      <td>20161231</td>\n",
              "      <td>-3.6</td>\n",
              "      <td>65.4</td>\n",
              "      <td>1019.0</td>\n",
              "      <td>9.3</td>\n",
              "      <td>88387</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>637 rows × 6 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "            0    1     2       3     4       5\n",
              "0    20140101  0.3  51.3  1003.6   7.6    5992\n",
              "1    20140102 -1.3  35.4  1010.4   7.5  101309\n",
              "2    20140103 -1.1  54.4  1006.9   8.4   84210\n",
              "3    20140104 -3.7  47.1  1008.8   9.3   74899\n",
              "4    20140105 -4.3  48.4  1013.1   8.1    7695\n",
              "..        ...  ...   ...     ...   ...     ...\n",
              "632  20161227 -6.3  54.6  1012.5   7.6  114596\n",
              "633  20161228 -8.4  49.0  1019.1  11.0  106959\n",
              "634  20161229 -7.2  53.1  1019.8   6.1  108302\n",
              "635  20161230 -9.1  50.9  1021.9  10.1  121339\n",
              "636  20161231 -3.6  65.4  1019.0   9.3   88387\n",
              "\n",
              "[637 rows x 6 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 318
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4ZkRsilsfGBw"
      },
      "source": [
        "data_x = train.loc[:, 1:4]\n",
        "data_y = train.loc[:,[5]]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8FFAMzM7ezO_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 404
        },
        "outputId": "4bb3eb69-eca1-4d6b-b332-39b887d6b16c"
      },
      "source": [
        "data_x"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.3</td>\n",
              "      <td>51.3</td>\n",
              "      <td>1003.6</td>\n",
              "      <td>7.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-1.3</td>\n",
              "      <td>35.4</td>\n",
              "      <td>1010.4</td>\n",
              "      <td>7.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-1.1</td>\n",
              "      <td>54.4</td>\n",
              "      <td>1006.9</td>\n",
              "      <td>8.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-3.7</td>\n",
              "      <td>47.1</td>\n",
              "      <td>1008.8</td>\n",
              "      <td>9.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-4.3</td>\n",
              "      <td>48.4</td>\n",
              "      <td>1013.1</td>\n",
              "      <td>8.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>632</th>\n",
              "      <td>-6.3</td>\n",
              "      <td>54.6</td>\n",
              "      <td>1012.5</td>\n",
              "      <td>7.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>633</th>\n",
              "      <td>-8.4</td>\n",
              "      <td>49.0</td>\n",
              "      <td>1019.1</td>\n",
              "      <td>11.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>634</th>\n",
              "      <td>-7.2</td>\n",
              "      <td>53.1</td>\n",
              "      <td>1019.8</td>\n",
              "      <td>6.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>635</th>\n",
              "      <td>-9.1</td>\n",
              "      <td>50.9</td>\n",
              "      <td>1021.9</td>\n",
              "      <td>10.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>636</th>\n",
              "      <td>-3.6</td>\n",
              "      <td>65.4</td>\n",
              "      <td>1019.0</td>\n",
              "      <td>9.3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>637 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "       1     2       3     4\n",
              "0    0.3  51.3  1003.6   7.6\n",
              "1   -1.3  35.4  1010.4   7.5\n",
              "2   -1.1  54.4  1006.9   8.4\n",
              "3   -3.7  47.1  1008.8   9.3\n",
              "4   -4.3  48.4  1013.1   8.1\n",
              "..   ...   ...     ...   ...\n",
              "632 -6.3  54.6  1012.5   7.6\n",
              "633 -8.4  49.0  1019.1  11.0\n",
              "634 -7.2  53.1  1019.8   6.1\n",
              "635 -9.1  50.9  1021.9  10.1\n",
              "636 -3.6  65.4  1019.0   9.3\n",
              "\n",
              "[637 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 320
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PsVeWCLBfNbZ"
      },
      "source": [
        "\n",
        "data_x = np.array(data_x)\n",
        "data_y = np.array(data_y)\n",
        "scaler = preprocessing.StandardScaler()\n",
        "data_x = scaler.fit_transform(data_x)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lX0ikKXRfQqN"
      },
      "source": [
        "x_train = torch.FloatTensor(data_x)\n",
        "y_train = torch.FloatTensor(data_y).view(-1,1).to(device)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kqF2Nq5lisBe",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 139
        },
        "outputId": "350fb71d-8a1e-476f-a4fb-3d45b66e2a3b"
      },
      "source": [
        "x_train"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "tensor([[-0.3458, -0.4825, -1.2435, -0.5332],\n",
              "        [-0.5237, -1.6147, -0.0864, -0.5689],\n",
              "        [-0.5015, -0.2618, -0.6819, -0.2471],\n",
              "        ...,\n",
              "        [-1.1797, -0.3544,  1.5131, -1.0696],\n",
              "        [-1.3909, -0.5110,  1.8705,  0.3609],\n",
              "        [-0.7794,  0.5215,  1.3770,  0.0748]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 323
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LcmvQWZRhmPK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "4f9cbc1c-7eb7-4a79-ae87-cfb7a3bb093f"
      },
      "source": [
        "y_train"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "tensor([[  5992.],\n",
              "        [101309.],\n",
              "        [ 84210.],\n",
              "        [ 74899.],\n",
              "        [  7695.],\n",
              "        [108504.],\n",
              "        [ 75304.],\n",
              "        [ 72880.],\n",
              "        [ 68903.],\n",
              "        [ 79318.],\n",
              "        [ 72582.],\n",
              "        [  7363.],\n",
              "        [107923.],\n",
              "        [ 75817.],\n",
              "        [ 78731.],\n",
              "        [ 80837.],\n",
              "        [ 86235.],\n",
              "        [ 79467.],\n",
              "        [  9770.],\n",
              "        [119605.],\n",
              "        [ 88186.],\n",
              "        [ 92010.],\n",
              "        [ 95412.],\n",
              "        [105379.],\n",
              "        [ 93775.],\n",
              "        [ 10919.],\n",
              "        [157772.],\n",
              "        [123011.],\n",
              "        [175329.],\n",
              "        [ 25001.],\n",
              "        [  9286.],\n",
              "        [ 25332.],\n",
              "        [ 20208.],\n",
              "        [205089.],\n",
              "        [110614.],\n",
              "        [120122.],\n",
              "        [123332.],\n",
              "        [126587.],\n",
              "        [114527.],\n",
              "        [ 12486.],\n",
              "        [169835.],\n",
              "        [112013.],\n",
              "        [111732.],\n",
              "        [110051.],\n",
              "        [116479.],\n",
              "        [105211.],\n",
              "        [ 13425.],\n",
              "        [165068.],\n",
              "        [106106.],\n",
              "        [107229.],\n",
              "        [105131.],\n",
              "        [107978.],\n",
              "        [ 92562.],\n",
              "        [  9937.],\n",
              "        [140734.],\n",
              "        [ 90496.],\n",
              "        [ 89305.],\n",
              "        [ 89186.],\n",
              "        [ 98846.],\n",
              "        [ 22900.],\n",
              "        [ 11014.],\n",
              "        [128346.],\n",
              "        [ 77189.],\n",
              "        [ 77514.],\n",
              "        [ 78666.],\n",
              "        [ 85461.],\n",
              "        [ 83248.],\n",
              "        [  9181.],\n",
              "        [ 84192.],\n",
              "        [ 93357.],\n",
              "        [ 76597.],\n",
              "        [ 79817.],\n",
              "        [ 87401.],\n",
              "        [ 86706.],\n",
              "        [ 10754.],\n",
              "        [120244.],\n",
              "        [ 82185.],\n",
              "        [ 83073.],\n",
              "        [ 82058.],\n",
              "        [ 93403.],\n",
              "        [ 89371.],\n",
              "        [  9751.],\n",
              "        [128952.],\n",
              "        [ 86656.],\n",
              "        [ 82944.],\n",
              "        [ 83444.],\n",
              "        [ 88510.],\n",
              "        [ 87911.],\n",
              "        [  9889.],\n",
              "        [117752.],\n",
              "        [ 84771.],\n",
              "        [ 60244.],\n",
              "        [ 56325.],\n",
              "        [ 65276.],\n",
              "        [ 84708.],\n",
              "        [ 79468.],\n",
              "        [  9267.],\n",
              "        [  4154.],\n",
              "        [ 12660.],\n",
              "        [ 71266.],\n",
              "        [ 93832.],\n",
              "        [ 72046.],\n",
              "        [ 75042.],\n",
              "        [  7282.],\n",
              "        [ 96874.],\n",
              "        [ 69053.],\n",
              "        [ 73349.],\n",
              "        [ 71549.],\n",
              "        [ 76287.],\n",
              "        [ 70830.],\n",
              "        [  8994.],\n",
              "        [103813.],\n",
              "        [ 69817.],\n",
              "        [ 66981.],\n",
              "        [ 66934.],\n",
              "        [ 71000.],\n",
              "        [ 65313.],\n",
              "        [  7644.],\n",
              "        [ 87830.],\n",
              "        [ 64894.],\n",
              "        [ 66568.],\n",
              "        [ 75287.],\n",
              "        [ 14253.],\n",
              "        [ 82016.],\n",
              "        [ 10190.],\n",
              "        [115936.],\n",
              "        [ 76560.],\n",
              "        [ 84446.],\n",
              "        [ 14786.],\n",
              "        [110457.],\n",
              "        [ 69709.],\n",
              "        [  8009.],\n",
              "        [110056.],\n",
              "        [ 75576.],\n",
              "        [ 76226.],\n",
              "        [ 79084.],\n",
              "        [ 88520.],\n",
              "        [ 77153.],\n",
              "        [  9807.],\n",
              "        [108065.],\n",
              "        [ 69900.],\n",
              "        [ 77219.],\n",
              "        [ 77262.],\n",
              "        [ 86324.],\n",
              "        [ 75407.],\n",
              "        [  8336.],\n",
              "        [118352.],\n",
              "        [ 84385.],\n",
              "        [ 85578.],\n",
              "        [ 88108.],\n",
              "        [ 93782.],\n",
              "        [ 85846.],\n",
              "        [ 10561.],\n",
              "        [130001.],\n",
              "        [ 90482.],\n",
              "        [ 87996.],\n",
              "        [ 88674.],\n",
              "        [ 98313.],\n",
              "        [ 89801.],\n",
              "        [  9225.],\n",
              "        [135437.],\n",
              "        [ 92686.],\n",
              "        [ 89586.],\n",
              "        [ 89504.],\n",
              "        [103730.],\n",
              "        [ 90558.],\n",
              "        [ 10964.],\n",
              "        [135327.],\n",
              "        [ 91390.],\n",
              "        [ 90665.],\n",
              "        [ 91985.],\n",
              "        [100608.],\n",
              "        [ 82451.],\n",
              "        [  9155.],\n",
              "        [130103.],\n",
              "        [ 88470.],\n",
              "        [ 87145.],\n",
              "        [ 87664.],\n",
              "        [ 85124.],\n",
              "        [ 84681.],\n",
              "        [ 10346.],\n",
              "        [114823.],\n",
              "        [ 81666.],\n",
              "        [ 83181.],\n",
              "        [ 85992.],\n",
              "        [ 90712.],\n",
              "        [ 84928.],\n",
              "        [ 10366.],\n",
              "        [120841.],\n",
              "        [ 82582.],\n",
              "        [ 81738.],\n",
              "        [ 80864.],\n",
              "        [ 86509.],\n",
              "        [ 78059.],\n",
              "        [  8649.],\n",
              "        [110453.],\n",
              "        [ 75967.],\n",
              "        [ 69904.],\n",
              "        [ 74880.],\n",
              "        [ 86038.],\n",
              "        [ 74378.],\n",
              "        [  9090.],\n",
              "        [105719.],\n",
              "        [ 76733.],\n",
              "        [ 83411.],\n",
              "        [  8202.],\n",
              "        [114600.],\n",
              "        [ 72979.],\n",
              "        [  8223.],\n",
              "        [115759.],\n",
              "        [ 80924.],\n",
              "        [ 94071.],\n",
              "        [  6114.],\n",
              "        [113444.],\n",
              "        [ 70757.],\n",
              "        [  8263.],\n",
              "        [108801.],\n",
              "        [ 71303.],\n",
              "        [ 69644.],\n",
              "        [ 71458.],\n",
              "        [ 78625.],\n",
              "        [ 65735.],\n",
              "        [  7047.],\n",
              "        [102221.],\n",
              "        [ 70309.],\n",
              "        [ 70479.],\n",
              "        [ 70792.],\n",
              "        [ 76286.],\n",
              "        [ 65337.],\n",
              "        [  8622.],\n",
              "        [104506.],\n",
              "        [ 71472.],\n",
              "        [ 72146.],\n",
              "        [ 73389.],\n",
              "        [ 80747.],\n",
              "        [ 68439.],\n",
              "        [  8217.],\n",
              "        [107285.],\n",
              "        [ 72553.],\n",
              "        [ 72931.],\n",
              "        [ 77572.],\n",
              "        [ 84521.],\n",
              "        [ 75474.],\n",
              "        [ 10651.],\n",
              "        [123126.],\n",
              "        [ 83733.],\n",
              "        [ 82761.],\n",
              "        [ 85976.],\n",
              "        [ 95251.],\n",
              "        [ 85388.],\n",
              "        [  9759.],\n",
              "        [127594.],\n",
              "        [ 93023.],\n",
              "        [ 89908.],\n",
              "        [ 91472.],\n",
              "        [102270.],\n",
              "        [ 92785.],\n",
              "        [ 11972.],\n",
              "        [144200.],\n",
              "        [143611.],\n",
              "        [ 19737.],\n",
              "        [  6133.],\n",
              "        [ 16242.],\n",
              "        [ 82965.],\n",
              "        [ 11163.],\n",
              "        [130601.],\n",
              "        [ 83294.],\n",
              "        [ 78603.],\n",
              "        [ 77687.],\n",
              "        [ 83002.],\n",
              "        [ 71788.],\n",
              "        [  8411.],\n",
              "        [103192.],\n",
              "        [ 66840.],\n",
              "        [ 68716.],\n",
              "        [ 70738.],\n",
              "        [ 78058.],\n",
              "        [ 70192.],\n",
              "        [  8452.],\n",
              "        [108826.],\n",
              "        [ 71296.],\n",
              "        [ 75868.],\n",
              "        [ 78681.],\n",
              "        [ 85827.],\n",
              "        [ 78278.],\n",
              "        [ 11251.],\n",
              "        [123045.],\n",
              "        [ 83801.],\n",
              "        [ 80648.],\n",
              "        [ 85959.],\n",
              "        [ 94416.],\n",
              "        [ 89332.],\n",
              "        [ 11260.],\n",
              "        [141282.],\n",
              "        [ 95898.],\n",
              "        [ 93217.],\n",
              "        [ 97260.],\n",
              "        [103902.],\n",
              "        [ 93951.],\n",
              "        [ 12839.],\n",
              "        [138465.],\n",
              "        [ 91234.],\n",
              "        [ 54782.],\n",
              "        [ 54005.],\n",
              "        [ 57255.],\n",
              "        [ 62282.],\n",
              "        [ 53921.],\n",
              "        [  9442.],\n",
              "        [ 97497.],\n",
              "        [ 68584.],\n",
              "        [ 73000.],\n",
              "        [ 73042.],\n",
              "        [ 74243.],\n",
              "        [ 66748.],\n",
              "        [  9087.],\n",
              "        [108219.],\n",
              "        [ 71777.],\n",
              "        [ 73679.],\n",
              "        [ 76915.],\n",
              "        [ 82873.],\n",
              "        [ 71368.],\n",
              "        [ 10192.],\n",
              "        [104559.],\n",
              "        [ 70921.],\n",
              "        [ 74517.],\n",
              "        [ 79305.],\n",
              "        [113076.],\n",
              "        [ 17077.],\n",
              "        [  3703.],\n",
              "        [ 13301.],\n",
              "        [ 46753.],\n",
              "        [113593.],\n",
              "        [ 63963.],\n",
              "        [ 86610.],\n",
              "        [ 21499.],\n",
              "        [ 10766.],\n",
              "        [111881.],\n",
              "        [ 67731.],\n",
              "        [ 65635.],\n",
              "        [ 77785.],\n",
              "        [ 13805.],\n",
              "        [ 72865.],\n",
              "        [  8554.],\n",
              "        [104307.],\n",
              "        [ 69071.],\n",
              "        [ 65682.],\n",
              "        [ 67275.],\n",
              "        [ 73718.],\n",
              "        [ 60055.],\n",
              "        [  9038.],\n",
              "        [ 99144.],\n",
              "        [ 67052.],\n",
              "        [ 64845.],\n",
              "        [ 67548.],\n",
              "        [ 75581.],\n",
              "        [ 61485.],\n",
              "        [  7983.],\n",
              "        [102547.],\n",
              "        [ 68967.],\n",
              "        [ 70811.],\n",
              "        [ 75060.],\n",
              "        [ 85100.],\n",
              "        [ 72800.],\n",
              "        [ 10170.],\n",
              "        [116121.],\n",
              "        [ 76714.],\n",
              "        [ 74029.],\n",
              "        [ 76755.],\n",
              "        [ 82849.],\n",
              "        [ 67500.],\n",
              "        [  8453.],\n",
              "        [107105.],\n",
              "        [ 73007.],\n",
              "        [ 71168.],\n",
              "        [ 73007.],\n",
              "        [ 75097.],\n",
              "        [ 67554.],\n",
              "        [  8839.],\n",
              "        [101920.],\n",
              "        [ 72165.],\n",
              "        [ 67073.],\n",
              "        [ 76429.],\n",
              "        [ 82747.],\n",
              "        [ 68151.],\n",
              "        [  8724.],\n",
              "        [114974.],\n",
              "        [ 78929.],\n",
              "        [ 76462.],\n",
              "        [ 78673.],\n",
              "        [ 89663.],\n",
              "        [ 77760.],\n",
              "        [ 10250.],\n",
              "        [120230.],\n",
              "        [ 81683.],\n",
              "        [ 77746.],\n",
              "        [ 76525.],\n",
              "        [ 90572.],\n",
              "        [ 77858.],\n",
              "        [ 10532.],\n",
              "        [120290.],\n",
              "        [ 83650.],\n",
              "        [ 82154.],\n",
              "        [ 82226.],\n",
              "        [ 91984.],\n",
              "        [ 77148.],\n",
              "        [  9756.],\n",
              "        [121908.],\n",
              "        [ 86415.],\n",
              "        [ 82466.],\n",
              "        [ 85195.],\n",
              "        [ 96033.],\n",
              "        [ 80249.],\n",
              "        [ 11324.],\n",
              "        [124777.],\n",
              "        [ 83689.],\n",
              "        [ 85708.],\n",
              "        [102716.],\n",
              "        [ 10533.],\n",
              "        [ 98935.],\n",
              "        [  9849.],\n",
              "        [130375.],\n",
              "        [ 91949.],\n",
              "        [ 91622.],\n",
              "        [114877.],\n",
              "        [  7267.],\n",
              "        [ 85394.],\n",
              "        [ 10208.],\n",
              "        [119935.],\n",
              "        [ 79645.],\n",
              "        [ 78023.],\n",
              "        [ 78212.],\n",
              "        [ 85178.],\n",
              "        [ 68893.],\n",
              "        [  8240.],\n",
              "        [110719.],\n",
              "        [ 73072.],\n",
              "        [ 71289.],\n",
              "        [ 73609.],\n",
              "        [ 84036.],\n",
              "        [ 66949.],\n",
              "        [  9279.],\n",
              "        [105756.],\n",
              "        [ 62717.],\n",
              "        [ 71360.],\n",
              "        [ 76084.],\n",
              "        [ 82506.],\n",
              "        [ 68463.],\n",
              "        [  8236.],\n",
              "        [111250.],\n",
              "        [ 76703.],\n",
              "        [ 78215.],\n",
              "        [ 81070.],\n",
              "        [ 91956.],\n",
              "        [ 77605.],\n",
              "        [ 12322.],\n",
              "        [133149.],\n",
              "        [ 92885.],\n",
              "        [ 99399.],\n",
              "        [107408.],\n",
              "        [142607.],\n",
              "        [119264.],\n",
              "        [ 16633.],\n",
              "        [  9575.],\n",
              "        [ 22766.],\n",
              "        [ 69271.],\n",
              "        [156650.],\n",
              "        [103140.],\n",
              "        [ 97501.],\n",
              "        [ 10976.],\n",
              "        [131370.],\n",
              "        [ 86185.],\n",
              "        [ 85677.],\n",
              "        [ 86977.],\n",
              "        [ 93461.],\n",
              "        [ 74709.],\n",
              "        [ 10637.],\n",
              "        [125219.],\n",
              "        [ 82223.],\n",
              "        [ 79570.],\n",
              "        [ 82053.],\n",
              "        [ 90454.],\n",
              "        [ 71019.],\n",
              "        [  8412.],\n",
              "        [120746.],\n",
              "        [ 14180.],\n",
              "        [ 98817.],\n",
              "        [ 71844.],\n",
              "        [ 74495.],\n",
              "        [ 66436.],\n",
              "        [  9746.],\n",
              "        [102899.],\n",
              "        [ 70927.],\n",
              "        [ 71576.],\n",
              "        [ 75452.],\n",
              "        [ 86590.],\n",
              "        [ 78889.],\n",
              "        [ 10627.],\n",
              "        [121681.],\n",
              "        [ 82375.],\n",
              "        [ 82748.],\n",
              "        [ 89054.],\n",
              "        [ 96544.],\n",
              "        [ 85269.],\n",
              "        [ 12849.],\n",
              "        [134407.],\n",
              "        [ 92233.],\n",
              "        [ 91512.],\n",
              "        [ 96071.],\n",
              "        [107032.],\n",
              "        [ 92856.],\n",
              "        [ 11535.],\n",
              "        [142574.],\n",
              "        [ 94838.],\n",
              "        [ 91241.],\n",
              "        [ 93285.],\n",
              "        [ 56910.],\n",
              "        [ 57968.],\n",
              "        [ 51560.],\n",
              "        [  8410.],\n",
              "        [ 76352.],\n",
              "        [ 53895.],\n",
              "        [ 54083.],\n",
              "        [ 55770.],\n",
              "        [ 63571.],\n",
              "        [ 58236.],\n",
              "        [  8773.],\n",
              "        [101665.],\n",
              "        [ 95706.],\n",
              "        [ 15150.],\n",
              "        [  4057.],\n",
              "        [ 12790.],\n",
              "        [ 62377.],\n",
              "        [ 11361.],\n",
              "        [106094.],\n",
              "        [ 71677.],\n",
              "        [ 71795.],\n",
              "        [ 70618.],\n",
              "        [ 71991.],\n",
              "        [ 60374.],\n",
              "        [  7918.],\n",
              "        [ 87812.],\n",
              "        [ 51654.],\n",
              "        [ 56177.],\n",
              "        [ 57263.],\n",
              "        [ 65263.],\n",
              "        [ 58385.],\n",
              "        [  8461.],\n",
              "        [ 14186.],\n",
              "        [ 89283.],\n",
              "        [ 58615.],\n",
              "        [ 58424.],\n",
              "        [ 67943.],\n",
              "        [ 59344.],\n",
              "        [  8316.],\n",
              "        [107462.],\n",
              "        [ 74507.],\n",
              "        [ 69208.],\n",
              "        [ 73837.],\n",
              "        [ 79988.],\n",
              "        [ 65998.],\n",
              "        [ 10305.],\n",
              "        [101464.],\n",
              "        [ 68752.],\n",
              "        [ 66875.],\n",
              "        [ 69207.],\n",
              "        [ 79732.],\n",
              "        [ 67468.],\n",
              "        [  9257.],\n",
              "        [108161.],\n",
              "        [ 70515.],\n",
              "        [ 70958.],\n",
              "        [ 73600.],\n",
              "        [ 81781.],\n",
              "        [ 71586.],\n",
              "        [ 10950.],\n",
              "        [117330.],\n",
              "        [ 79679.],\n",
              "        [ 80568.],\n",
              "        [ 84025.],\n",
              "        [ 89295.],\n",
              "        [ 75053.],\n",
              "        [ 10353.],\n",
              "        [109443.],\n",
              "        [ 75612.],\n",
              "        [ 75235.],\n",
              "        [ 78940.],\n",
              "        [ 87680.],\n",
              "        [ 73880.],\n",
              "        [  9709.],\n",
              "        [106549.],\n",
              "        [ 77105.],\n",
              "        [ 75343.],\n",
              "        [ 77922.],\n",
              "        [ 85634.],\n",
              "        [ 72650.],\n",
              "        [ 11082.],\n",
              "        [116661.],\n",
              "        [ 79515.],\n",
              "        [ 77898.],\n",
              "        [ 82439.],\n",
              "        [ 93644.],\n",
              "        [ 78559.],\n",
              "        [ 10703.],\n",
              "        [122668.],\n",
              "        [ 84180.],\n",
              "        [ 84168.],\n",
              "        [ 86375.],\n",
              "        [ 96391.],\n",
              "        [ 83577.],\n",
              "        [ 13643.],\n",
              "        [135439.],\n",
              "        [ 91190.],\n",
              "        [ 94479.],\n",
              "        [100694.],\n",
              "        [113129.],\n",
              "        [ 96224.],\n",
              "        [ 13890.],\n",
              "        [165430.],\n",
              "        [118124.],\n",
              "        [114098.],\n",
              "        [118073.],\n",
              "        [135558.],\n",
              "        [113968.],\n",
              "        [ 17573.],\n",
              "        [188950.],\n",
              "        [130358.],\n",
              "        [126770.],\n",
              "        [123294.],\n",
              "        [135545.],\n",
              "        [107052.],\n",
              "        [ 10677.],\n",
              "        [174550.],\n",
              "        [114596.],\n",
              "        [106959.],\n",
              "        [108302.],\n",
              "        [121339.],\n",
              "        [ 88387.]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 324
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "R2K_5F0ofQdD"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XHi3E-NBhxRm",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "f153470a-3f5a-42cf-8a77-c97578e724ec"
      },
      "source": [
        "torch.manual_seed(1)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<torch._C.Generator at 0x7f4655f944f0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 325
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-ieYO6vRdfA1"
      },
      "source": [
        "train_dataset = torch.utils.data.TensorDataset(x_train, y_train)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "x21a1Bnvde-V"
      },
      "source": [
        "data_loader = torch.utils.data.DataLoader(dataset=train_dataset,\n",
        "                                          batch_size=batch_size,\n",
        "                                          shuffle=True,\n",
        "                                          drop_last=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "T6KsiaBbde4o"
      },
      "source": [
        "linear1 = torch.nn.Linear(4,8, bias = True)\n",
        "linear2 = torch.nn.Linear(8,8, bias = True)\n",
        "linear3 = torch.nn.Linear(8,8, bias = True)\n",
        "linear4 = torch.nn.Linear(8,8, bias = True)\n",
        "linear5 = torch.nn.Linear(8,1, bias = True)\n",
        "relu = torch.nn.ReLU()\n",
        "dropout = torch.nn.Dropout(p=0.3)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "m9rvpFjdd8hO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 69
        },
        "outputId": "f5afc22f-b229-4c9c-9041-c5eaf880d498"
      },
      "source": [
        "torch.nn.init.xavier_normal_(linear1.weight)\n",
        "torch.nn.init.xavier_normal_(linear2.weight)\n",
        "torch.nn.init.xavier_normal_(linear3.weight)\n",
        "torch.nn.init.xavier_normal_(linear4.weight)\n",
        "torch.nn.init.xavier_normal_(linear5.weight)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Parameter containing:\n",
              "tensor([[ 0.5865, -0.2145, -0.8556, -0.0423,  0.5544,  0.0088, -0.0748, -0.1484]],\n",
              "       requires_grad=True)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 329
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_HC9xbskd8eo"
      },
      "source": [
        "model = torch.nn.Sequential(linear1, relu, dropout,\n",
        "                            linear2, relu, dropout,\n",
        "                            linear3, relu, dropout,\n",
        "                            linear4, relu, dropout,\n",
        "                            linear5).to(device)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kJ2j8oOrd8b8"
      },
      "source": [
        "loss = torch.nn.MSELoss().to(device)\n",
        "optimizer = torch.optim.Adam(model.parameters(), lr=learning_rate)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HWSvKe4aeBWs",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 383
        },
        "outputId": "0ce06e50-e177-4f16-c74f-f2ae2a331302"
      },
      "source": [
        "total_batch = len(data_loader)\n",
        "model.train()\n",
        "for epoch in range(training_epochs + 1):\n",
        "    avg_cost = 0\n",
        "    for X, Y in data_loader:\n",
        "\n",
        "        X = X.to(device)\n",
        "        Y = Y.to(device)\n",
        "\n",
        "        # 그래디언트 초기화\n",
        "        optimizer.zero_grad()\n",
        "        # Forward 계산\n",
        "        hypothesis = model(X)\n",
        "        # Error 계산\n",
        "        cost = loss(hypothesis, Y)\n",
        "        # Backparopagation\n",
        "        cost.backward()\n",
        "        # 가중치 갱신\n",
        "        optimizer.step()\n",
        "\n",
        "        # 평균 Error 계산\n",
        "        avg_cost += cost / total_batch\n",
        "    if epoch%10 == 0:\n",
        "      print('Epoch:', '%04d' % (epoch), 'cost =', '{:.1f}'.format(avg_cost))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch: 0000 cost = 6872298496.0\n",
            "Epoch: 0010 cost = 2594387968.0\n",
            "Epoch: 0020 cost = 2553607680.0\n",
            "Epoch: 0030 cost = 2431033856.0\n",
            "Epoch: 0040 cost = 2338613760.0\n",
            "Epoch: 0050 cost = 2323397120.0\n",
            "Epoch: 0060 cost = 2159770368.0\n",
            "Epoch: 0070 cost = 2123411200.0\n",
            "Epoch: 0080 cost = 2144308352.0\n",
            "Epoch: 0090 cost = 2138846208.0\n",
            "Epoch: 0100 cost = 2030355584.0\n",
            "Epoch: 0110 cost = 2118332544.0\n",
            "Epoch: 0120 cost = 2191880704.0\n",
            "Epoch: 0130 cost = 2190975488.0\n",
            "Epoch: 0140 cost = 2354444544.0\n",
            "Epoch: 0150 cost = 2216523776.0\n",
            "Epoch: 0160 cost = 2170434816.0\n",
            "Epoch: 0170 cost = 2002432768.0\n",
            "Epoch: 0180 cost = 2172444928.0\n",
            "Epoch: 0190 cost = 2250219264.0\n",
            "Epoch: 0200 cost = 2129690880.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hsufIN5UfxTR",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 196
        },
        "outputId": "d91f244a-4da9-4d58-b2cd-1830a7457c93"
      },
      "source": [
        "test_xy = pd.read_csv(\"test.csv\", header=None, skiprows=1)\n",
        "test_xy"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>20170307</td>\n",
              "      <td>-4.0</td>\n",
              "      <td>37.5</td>\n",
              "      <td>1006.0</td>\n",
              "      <td>6.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>20170308</td>\n",
              "      <td>-5.3</td>\n",
              "      <td>50.6</td>\n",
              "      <td>1003.9</td>\n",
              "      <td>10.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>20170309</td>\n",
              "      <td>-2.7</td>\n",
              "      <td>47.3</td>\n",
              "      <td>1002.1</td>\n",
              "      <td>13.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>20170310</td>\n",
              "      <td>-1.2</td>\n",
              "      <td>37.4</td>\n",
              "      <td>1008.7</td>\n",
              "      <td>13.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20170216</td>\n",
              "      <td>-1.9</td>\n",
              "      <td>63.9</td>\n",
              "      <td>1009.0</td>\n",
              "      <td>12.2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          0    1     2       3     4\n",
              "0  20170307 -4.0  37.5  1006.0   6.9\n",
              "1  20170308 -5.3  50.6  1003.9  10.3\n",
              "2  20170309 -2.7  47.3  1002.1  13.4\n",
              "3  20170310 -1.2  37.4  1008.7  13.4\n",
              "4  20170216 -1.9  63.9  1009.0  12.2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 333
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AYBCOnrPeBfT"
      },
      "source": [
        "\n",
        "\n",
        "with torch.no_grad():\n",
        "  model.eval() \n",
        "  x_test_data=test_xy.loc[:,1:]\n",
        "  x_test_data=np.array(x_test_data)\n",
        "  x_test_data = scaler.transform(x_test_data)\n",
        "  x_test_data=torch.from_numpy(x_test_data).float().to(device)\n",
        "\n",
        "  prediction = model(x_test_data)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1Jsv5RxoeBb9"
      },
      "source": [
        "correct_prediction = prediction.cpu().numpy().reshape(-1,1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_BmUbU4zd8Y4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 104
        },
        "outputId": "df08c6f3-b85a-4d82-abde-b20044fcc4c7"
      },
      "source": [
        "correct_prediction"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[59845.082],\n",
              "       [61183.086],\n",
              "       [65437.484],\n",
              "       [64006.383],\n",
              "       [58175.9  ]], dtype=float32)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 336
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oxhJAnj1eIt6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 196
        },
        "outputId": "a62d5c5d-05be-4a50-8ce5-982d0c49b6c1"
      },
      "source": [
        "submit=pd.read_csv('sample.csv')\n",
        "submit"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>Expected</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2017-03-07</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2017-03-08</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2017-03-09</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2017-03-10</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2017-02-16</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           ID  Expected\n",
              "0  2017-03-07         1\n",
              "1  2017-03-08         1\n",
              "2  2017-03-09         1\n",
              "3  2017-03-10         1\n",
              "4  2017-02-16         1"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 337
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pgf3BNegeIpk",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 304
        },
        "outputId": "2937ee07-4fcd-4dad-b302-7fe11a0cee2e"
      },
      "source": [
        "for i in range(len(correct_prediction)):\n",
        "  submit['Expected'][i]=correct_prediction[i].item()\n",
        "\n",
        "submit"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  \n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>Expected</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2017-03-07</td>\n",
              "      <td>59845</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2017-03-08</td>\n",
              "      <td>61183</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2017-03-09</td>\n",
              "      <td>65437</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2017-03-10</td>\n",
              "      <td>64006</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2017-02-16</td>\n",
              "      <td>58175</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           ID  Expected\n",
              "0  2017-03-07     59845\n",
              "1  2017-03-08     61183\n",
              "2  2017-03-09     65437\n",
              "3  2017-03-10     64006\n",
              "4  2017-02-16     58175"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 338
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zkBoyz8Qdezj"
      },
      "source": [
        "submit.to_csv('submit.csv', mode = 'w', index=False)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "z3Ic79oVeOHb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "outputId": "b0c4d032-ae99-41d9-c19c-844bb5949fec"
      },
      "source": [
        "!kaggle competitions submit -c cold -f submit.csv -m \"17011885\""
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "100% 97.0/97.0 [00:03<00:00, 30.1B/s]\n",
            "Successfully submitted to 감기 진료건수"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}
